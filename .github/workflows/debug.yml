name: Debug

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  linux_gcc:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y cmake build-essential libogg-dev libvorbis-dev libopenal-dev libboost-all-dev libsdl2-dev libsdl2-image-dev libfreetype6-dev libraqm-dev libcurl4-openssl-dev libglew-dev libharfbuzz-dev libfribidi-dev

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Create packages
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ${{runner.workspace}}/supertux/.scripts/package.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Linux AppImage and source code
        path: ${{runner.workspace}}/build/s3-upload/*

  macos_clang:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: brew install cmake bash libogg libvorbis glew openal-soft sdl2 sdl2_image sdl2_ttf freetype harfbuzz curl-openssl fribidi boost

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Create Build Environment
      run: mkdir ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNINGS=ON -DWERROR=ON -DGLBINDING_ENABLED=$USE_GLBINDING -DBUILD_TESTS=ON -DCMAKE_INSTALL_MESSAGE=NEVER -DCMAKE_INSTALL_PREFIX=/usr -DINSTALL_SUBDIR_BIN=bin -DINSTALL_SUBDIR_SHARE=share/supertux2

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make -j3
